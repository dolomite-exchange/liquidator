/* Autogenerated file. Do not edit manually. */
import type { EventFragment, FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';

export interface DolomiteERC4626Interface extends utils.Interface {
  functions: {
    'CHAIN_ID()': FunctionFragment;
    'DOLOMITE_MARGIN()': FunctionFragment;
    'DOLOMITE_MARGIN_OWNER()': FunctionFragment;
    'DOLOMITE_REGISTRY()': FunctionFragment;
    'allowance(address,address)': FunctionFragment;
    'approve(address,uint256)': FunctionFragment;
    'asset()': FunctionFragment;
    'balanceOf(address)': FunctionFragment;
    'convertToAssets(uint256)': FunctionFragment;
    'convertToShares(uint256)': FunctionFragment;
    'decimals()': FunctionFragment;
    'deposit(uint256,address)': FunctionFragment;
    'initialize(string,string,uint8,uint256)': FunctionFragment;
    'isValidReceiver(address)': FunctionFragment;
    'marketId()': FunctionFragment;
    'maxDeposit(address)': FunctionFragment;
    'maxMint(address)': FunctionFragment;
    'maxRedeem(address)': FunctionFragment;
    'maxWithdraw(address)': FunctionFragment;
    'mint(uint256,address)': FunctionFragment;
    'name()': FunctionFragment;
    'previewDeposit(uint256)': FunctionFragment;
    'previewMint(uint256)': FunctionFragment;
    'previewRedeem(uint256)': FunctionFragment;
    'previewWithdraw(uint256)': FunctionFragment;
    'redeem(uint256,address,address)': FunctionFragment;
    'symbol()': FunctionFragment;
    'totalAssets()': FunctionFragment;
    'totalSupply()': FunctionFragment;
    'transfer(address,uint256)': FunctionFragment;
    'transferFrom(address,address,uint256)': FunctionFragment;
    'withdraw(uint256,address,address)': FunctionFragment;
  };
  events: {
    'Approval(address,address,uint256)': EventFragment;
    'Deposit(address,address,uint256,uint256)': EventFragment;
    'Initialized(uint8)': EventFragment;
    'Transfer(address,address,uint256)': EventFragment;
    'Withdraw(address,address,address,uint256,uint256)': EventFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'CHAIN_ID'
      | 'DOLOMITE_MARGIN'
      | 'DOLOMITE_MARGIN_OWNER'
      | 'DOLOMITE_REGISTRY'
      | 'allowance'
      | 'approve'
      | 'asset'
      | 'balanceOf'
      | 'convertToAssets'
      | 'convertToShares'
      | 'decimals'
      | 'deposit'
      | 'initialize'
      | 'isValidReceiver'
      | 'marketId'
      | 'maxDeposit'
      | 'maxMint'
      | 'maxRedeem'
      | 'maxWithdraw'
      | 'mint'
      | 'name'
      | 'previewDeposit'
      | 'previewMint'
      | 'previewRedeem'
      | 'previewWithdraw'
      | 'redeem'
      | 'symbol'
      | 'totalAssets'
      | 'totalSupply'
      | 'transfer'
      | 'transferFrom'
      | 'withdraw',
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'CHAIN_ID', values?: undefined): string;

  encodeFunctionData(
    functionFragment: 'DOLOMITE_MARGIN',
    values?: undefined,
  ): string;

  encodeFunctionData(
    functionFragment: 'DOLOMITE_MARGIN_OWNER',
    values?: undefined,
  ): string;

  encodeFunctionData(
    functionFragment: 'DOLOMITE_REGISTRY',
    values?: undefined,
  ): string;

  encodeFunctionData(
    functionFragment: 'allowance',
    values: [string, string],
  ): string;

  encodeFunctionData(
    functionFragment: 'approve',
    values: [string, BigNumberish],
  ): string;

  encodeFunctionData(functionFragment: 'asset', values?: undefined): string;

  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string;

  encodeFunctionData(
    functionFragment: 'convertToAssets',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'convertToShares',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string;

  encodeFunctionData(
    functionFragment: 'deposit',
    values: [BigNumberish, string],
  ): string;

  encodeFunctionData(
    functionFragment: 'initialize',
    values: [string, string, BigNumberish, BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'isValidReceiver',
    values: [string],
  ): string;

  encodeFunctionData(functionFragment: 'marketId', values?: undefined): string;

  encodeFunctionData(functionFragment: 'maxDeposit', values: [string]): string;

  encodeFunctionData(functionFragment: 'maxMint', values: [string]): string;

  encodeFunctionData(functionFragment: 'maxRedeem', values: [string]): string;

  encodeFunctionData(functionFragment: 'maxWithdraw', values: [string]): string;

  encodeFunctionData(
    functionFragment: 'mint',
    values: [BigNumberish, string],
  ): string;

  encodeFunctionData(functionFragment: 'name', values?: undefined): string;

  encodeFunctionData(
    functionFragment: 'previewDeposit',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'previewMint',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'previewRedeem',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'previewWithdraw',
    values: [BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'redeem',
    values: [BigNumberish, string, string],
  ): string;

  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string;

  encodeFunctionData(
    functionFragment: 'totalAssets',
    values?: undefined,
  ): string;

  encodeFunctionData(
    functionFragment: 'totalSupply',
    values?: undefined,
  ): string;

  encodeFunctionData(
    functionFragment: 'transfer',
    values: [string, BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'transferFrom',
    values: [string, string, BigNumberish],
  ): string;

  encodeFunctionData(
    functionFragment: 'withdraw',
    values: [BigNumberish, string, string],
  ): string;

  decodeFunctionResult(functionFragment: 'CHAIN_ID', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'DOLOMITE_MARGIN',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'DOLOMITE_MARGIN_OWNER',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'DOLOMITE_REGISTRY',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'asset', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'convertToAssets',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'convertToShares',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'deposit', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'isValidReceiver',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'marketId', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'maxDeposit', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'maxMint', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'maxRedeem', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'maxWithdraw',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'previewDeposit',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'previewMint',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'previewRedeem',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'previewWithdraw',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'redeem', data: BytesLike): Result;

  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'totalAssets',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(
    functionFragment: 'totalSupply',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result;

  decodeFunctionResult(
    functionFragment: 'transferFrom',
    data: BytesLike,
  ): Result;

  decodeFunctionResult(functionFragment: 'withdraw', data: BytesLike): Result;

  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment;

  getEvent(nameOrSignatureOrTopic: 'Deposit'): EventFragment;

  getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment;

  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment;

  getEvent(nameOrSignatureOrTopic: 'Withdraw'): EventFragment;
}

export interface DolomiteERC4626 extends BaseContract {
  interface: DolomiteERC4626Interface;
  functions: {
    CHAIN_ID(overrides?: CallOverrides): Promise<[BigNumber]>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<[string]>;

    DOLOMITE_MARGIN_OWNER(overrides?: CallOverrides): Promise<[string]>;

    DOLOMITE_REGISTRY(overrides?: CallOverrides): Promise<[string]>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    asset(overrides?: CallOverrides): Promise<[string]>;

    balanceOf(
      _account: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    convertToAssets(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    convertToShares(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    decimals(overrides?: CallOverrides): Promise<[number]>;

    deposit(
      _assets: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    initialize(
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      _marketId: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    isValidReceiver(
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>;

    marketId(overrides?: CallOverrides): Promise<[BigNumber]>;

    maxDeposit(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    maxMint(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    maxRedeem(_owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    maxWithdraw(
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    mint(
      _shares: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    previewDeposit(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    previewMint(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    previewRedeem(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    previewWithdraw(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    redeem(
      _shares: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    totalAssets(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    transfer(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    transferFrom(
      from: string,
      to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;

    withdraw(
      _assets: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<ContractTransaction>;
  };
  callStatic: {
    CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

    DOLOMITE_MARGIN_OWNER(overrides?: CallOverrides): Promise<string>;

    DOLOMITE_REGISTRY(overrides?: CallOverrides): Promise<string>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    asset(overrides?: CallOverrides): Promise<string>;

    balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

    convertToAssets(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    convertToShares(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<number>;

    deposit(
      _assets: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    initialize(
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      _marketId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    isValidReceiver(
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    marketId(overrides?: CallOverrides): Promise<BigNumber>;

    maxDeposit(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxMint(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxRedeem(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxWithdraw(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      _shares: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<string>;

    previewDeposit(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewMint(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewRedeem(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewWithdraw(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    redeem(
      _shares: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<string>;

    totalAssets(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    transferFrom(
      from: string,
      to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>;

    withdraw(
      _assets: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };
  estimateGas: {
    CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<BigNumber>;

    DOLOMITE_MARGIN_OWNER(overrides?: CallOverrides): Promise<BigNumber>;

    DOLOMITE_REGISTRY(overrides?: CallOverrides): Promise<BigNumber>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    asset(overrides?: CallOverrides): Promise<BigNumber>;

    balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

    convertToAssets(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    convertToShares(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    deposit(
      _assets: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    initialize(
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      _marketId: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    isValidReceiver(
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    marketId(overrides?: CallOverrides): Promise<BigNumber>;

    maxDeposit(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxMint(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxRedeem(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxWithdraw(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      _shares: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    previewDeposit(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewMint(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewRedeem(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    previewWithdraw(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    redeem(
      _shares: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    totalAssets(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;

    withdraw(
      _assets: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<BigNumber>;
  };
  populateTransaction: {
    CHAIN_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DOLOMITE_MARGIN_OWNER(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    DOLOMITE_REGISTRY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    asset(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balanceOf(
      _account: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    convertToAssets(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    convertToShares(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    deposit(
      _assets: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    initialize(
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      _marketId: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    isValidReceiver(
      _receiver: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    marketId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    maxDeposit(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    maxMint(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    maxRedeem(
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    maxWithdraw(
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    mint(
      _shares: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    previewDeposit(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    previewMint(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    previewRedeem(
      _shares: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    previewWithdraw(
      _assets: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    redeem(
      _shares: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalAssets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    transferFrom(
      from: string,
      to: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;

    withdraw(
      _assets: BigNumberish,
      _receiver: string,
      _owner: string,
      overrides?: Overrides & { from?: string },
    ): Promise<PopulatedTransaction>;
  };

  connect(signerOrProvider: Signer | Provider | string): this;

  attach(addressOrName: string): this;

  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;

  CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

  DOLOMITE_MARGIN(overrides?: CallOverrides): Promise<string>;

  DOLOMITE_MARGIN_OWNER(overrides?: CallOverrides): Promise<string>;

  DOLOMITE_REGISTRY(overrides?: CallOverrides): Promise<string>;

  allowance(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  approve(
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  asset(overrides?: CallOverrides): Promise<string>;

  balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

  convertToAssets(
    _shares: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  convertToShares(
    _assets: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  decimals(overrides?: CallOverrides): Promise<number>;

  deposit(
    _assets: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  initialize(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _marketId: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  isValidReceiver(
    _receiver: string,
    overrides?: CallOverrides,
  ): Promise<boolean>;

  marketId(overrides?: CallOverrides): Promise<BigNumber>;

  maxDeposit(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  maxMint(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  maxRedeem(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  maxWithdraw(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  mint(
    _shares: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  previewDeposit(
    _assets: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  previewMint(
    _shares: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  previewRedeem(
    _shares: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  previewWithdraw(
    _assets: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  redeem(
    _shares: BigNumberish,
    _receiver: string,
    _owner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  totalAssets(overrides?: CallOverrides): Promise<BigNumber>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  transferFrom(
    from: string,
    to: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;

  withdraw(
    _assets: BigNumberish,
    _receiver: string,
    _owner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<ContractTransaction>;
}
